name: 'Terraform Deploy to Azure'

on:
  # Se activa en MERGE de PRs
  pull_request:
    types: [closed]
    branches: [ main ]

  # Se activa en push directo a main (backup)
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-deploy:
    # Para PRs closed, solo ejecutar si fue MERGE
    if: |
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # environment: production
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
            "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
            "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
            "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          }

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

    - name: Get Terraform Outputs
      id: terraform-output
      run: |
        # Crear archivo temporal con los outputs
        terraform output -json > terraform_outputs.json
        
        # Extraer valores usando jq
        jq -r '.resource_group_name.value' terraform_outputs.json > rg_name.txt
        jq -r '.app_service_name.value' terraform_outputs.json > app_name.txt
        
        RG_NAME=$(cat rg_name.txt)
        APP_NAME=$(cat app_name.txt)
        
        # Usar environment file en lugar de GITHUB_OUTPUT
        echo "RESOURCE_GROUP_NAME=$RG_NAME" >> $GITHUB_ENV
        echo "APP_SERVICE_NAME=$APP_NAME" >> $GITHUB_ENV
        
        echo "âœ… Resource Group: $RG_NAME"
        echo "âœ… App Service: $APP_NAME"

    - name: Deploy .NET Application
      run: |
        echo "ðŸ”¨ Desplegando aplicaciÃ³n..."
        echo "Resource Group: $RESOURCE_GROUP_NAME"
        echo "App Service: $APP_SERVICE_NAME"
        
        az webapp deploy \
          --resource-group "$RESOURCE_GROUP_NAME" \
          --name "$APP_SERVICE_NAME" \
          --src-path ./publish \
          --type zip